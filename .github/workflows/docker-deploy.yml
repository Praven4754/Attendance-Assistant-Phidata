name: Deploy to EC2 with Ngrok

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Deploy on EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
          NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@$EC2_HOST "bash -s" <<ENDSSH
          set -eux

          APP_DIR=/home/ubuntu/app
          INTERNAL_PORT=7860
          EXTERNAL_PORT=7860

          mkdir -p "$APP_DIR"

          # Install Docker if missing
          if ! command -v docker >/dev/null 2>&1; then
            sudo apt-get update -y
            sudo apt-get install -y docker.io git curl unzip jq
            sudo systemctl enable docker
            sudo systemctl start docker
          fi

          # Install ngrok if missing
          if ! command -v ngrok >/dev/null 2>&1; then
            curl -s https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-stable-linux-amd64.zip -o ngrok.zip
            unzip ngrok.zip
            sudo mv ngrok /usr/local/bin/
            rm -f ngrok.zip
          fi

          # Configure ngrok (now the env variable will work)
          ngrok config add-authtoken "$NGROK_AUTH_TOKEN"

          # Stop previous container and free port
          if sudo docker ps -a --format '{{.Names}}' | grep -Eq "^attendance-app\$"; then
            sudo docker rm -f attendance-app || true
          fi
          pkill -f "ngrok http" || true
          sudo fuser -k $EXTERNAL_PORT/tcp || true

          # Clone project
          rm -rf "$APP_DIR/*"
          git clone https://github.com/Praven4754/Attendance-Assistant-Phidata.git "$APP_DIR"
          cd "$APP_DIR"

          # Create .env
          cat > "$APP_DIR/.env" <<ENV_EOF
          GOOGLE_API_KEY='${GOOGLE_API_KEY:-not_set}'
          ENV_EOF

          # Build and run Docker container
          IMAGE_TAG="attendance-app-$(date +%Y%m%d%H%M%S)"
          sudo docker build -t attendance-app:$IMAGE_TAG "$APP_DIR"
          sudo docker run -d --name attendance-app --env-file "$APP_DIR/.env" -p $EXTERNAL_PORT:$INTERNAL_PORT attendance-app:$IMAGE_TAG

          # Start ngrok in background
          nohup ngrok http $EXTERNAL_PORT > /home/ubuntu/ngrok.log 2>&1 &

          # Wait for ngrok URL
          for i in {1..12}; do
            NGROK_URL=$(curl -s http://127.0.0.1:4040/api/tunnels | jq -r '.tunnels[0].public_url')
            if [ -n "$NGROK_URL" ] && [[ "$NGROK_URL" != "null" ]]; then
              echo "$NGROK_URL" > /home/ubuntu/ngrok_url.txt
              break
            fi
            sleep 5
          done
          echo "$NGROK_URL"
          ENDSSH

      - name: Show Ngrok URL
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST }} "cat /home/ubuntu/ngrok_url.txt"
