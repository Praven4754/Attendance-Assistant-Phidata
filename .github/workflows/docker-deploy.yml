name: Deploy to EC2

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Deploy on EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@$EC2_HOST 'bash -s' <<'EOF'
          set -eux

          APP_DIR=/home/ubuntu/app

          # Install Docker if missing
          if ! command -v docker >/dev/null 2>&1; then
            sudo apt-get update -y
            sudo apt-get install -y docker.io git
            sudo systemctl enable docker
            sudo systemctl start docker
          fi

          # Remove old app directory
          rm -rf "$APP_DIR"

          # Clone latest code
          git clone https://github.com/Praven4754/Attendance-Assistant-Phidata.git "$APP_DIR"
          cd "$APP_DIR"

          # Write .env file with available secrets
          cat > "$APP_DIR/.env" <<ENV_EOF
          GOOGLE_API_KEY='${GOOGLE_API_KEY:-not_set}'
          ENV_EOF

          # Build Docker image with timestamp tag
          IMAGE_TAG="attendance-app-$(date +%Y%m%d%H%M%S)"
          sudo docker build -t attendance-app:$IMAGE_TAG "$APP_DIR"

          # Stop and remove previous container if exists
          if sudo docker ps -a --format '{{.Names}}' | grep -Eq "^attendance-app$"; then
            sudo docker rm -f attendance-app
          fi

          # Run new container
          sudo docker run -d --name attendance-app \
            --env-file "$APP_DIR/.env" \
            -p 7860:7860 attendance-app:$IMAGE_TAG

          # Cleanup old images
          sudo docker image prune -f
          EOF
