name: Deploy to EC2

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Deploy on EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          API_KEY: ${{ secrets.API_KEY }}
          OTHER_KEY: ${{ secrets.OTHER_KEY }}
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@$EC2_HOST << 'EOF'
            set -eux

            APP_DIR=/home/ubuntu/app

            # Install Docker if missing
            if ! command -v docker >/dev/null 2>&1; then
              sudo apt-get update -y
              sudo apt-get install -y docker.io git
              sudo systemctl enable docker
              sudo systemctl start docker
            fi

            # Remove old app and clone latest
            if [ -d "$APP_DIR" ]; then
              rm -rf "$APP_DIR"
            fi
            git clone https://github.com/Praven4754/Attendance-Assistant-Phidata.git "$APP_DIR"
            cd "$APP_DIR"

            # Write .env file from GitHub Secrets
            cat <<ENV_EOF > "$APP_DIR/.env"
API_KEY=$API_KEY
OTHER_KEY=$OTHER_KEY
ENV_EOF

            # Build Docker image
            IMAGE_TAG="deploy-$(date +%Y%m%d%H%M%S)"
            sudo docker build -t attendance-app:$IMAGE_TAG "$APP_DIR"

            # Restart container
            sudo docker rm -f attendance-app || true
            sudo docker run -d --name attendance-app \
              --env-file "$APP_DIR/.env" \
              -p 7860:7860 attendance-app:$IMAGE_TAG

            # Clean up old images
            sudo docker image prune -f || true
          EOF
