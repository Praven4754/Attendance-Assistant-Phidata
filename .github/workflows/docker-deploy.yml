name: Deploy to EC2

on:
  push:
    branches:
      - main   # or your deployment branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Deploy to EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ubuntu
          EC2_KEY: ${{ secrets.EC2_KEY }}
        run: |
          echo "$EC2_KEY" > ec2_key.pem
          chmod 600 ec2_key.pem

          ssh -o StrictHostKeyChecking=no -i ec2_key.pem $EC2_USER@$EC2_HOST 'bash -s' <<'EOF'
            set -e

            echo "✅ Updating system..."
            sudo apt-get update -y

            echo "✅ Installing Docker (if missing)..."
            if ! command -v docker &> /dev/null
            then
              curl -fsSL https://get.docker.com -o get-docker.sh
              sh get-docker.sh
              sudo usermod -aG docker $USER
            fi

            echo "✅ Installing Git..."
            sudo apt-get install -y git

            echo "✅ Cloning/updating project..."
            cd ~
            if [ -d "Attendance-Assistant-Phidata" ]; then
              cd Attendance-Assistant-Phidata && git pull
            else
              git clone https://github.com/Praven4754/Attendance-Assistant-Phidata.git
              cd Attendance-Assistant-Phidata
            fi

            echo "✅ Building and running Docker container..."
            docker build -t attendance-assistant .
            docker stop attendance-container || true
            docker rm attendance-container || true
            docker run -d -p 80:7860 --name attendance-container attendance-assistant

            echo "✅ Starting ngrok tunnel..."
            pkill ngrok || true
            nohup ngrok http 80 > ngrok.log 2>&1 &

            echo "✅ Waiting for ngrok to start..."
            sleep 5
            curl --silent http://127.0.0.1:4040/api/tunnels | jq -r '.tunnels[0].public_url'
          EOF
