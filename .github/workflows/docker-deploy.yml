name: Deploy to EC2 and get Ngrok URL

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Deploy on EC2 and get Ngrok URL
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
          NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@$EC2_HOST 'bash -s' <<'ENDSSH'
            set -eux

            # Assign environment variables passed from GitHub Actions
            NGROK_AUTH_TOKEN="${NGROK_AUTH_TOKEN}"
            GOOGLE_API_KEY="${GOOGLE_API_KEY}"

            APP_DIR="/home/ubuntu/app"
            INTERNAL_PORT=7860
            EXTERNAL_PORT=7860

            # Create app directory
            mkdir -p "$APP_DIR"

            # Install Docker if missing
            if ! command -v docker >/dev/null 2>&1; then
              sudo apt-get update -y
              sudo apt-get install -y docker.io git curl jq unzip
              sudo systemctl enable docker
              sudo systemctl start docker
              sudo usermod -aG docker ubuntu
            fi

            # Install ngrok if missing
            if ! command -v ngrok >/dev/null 2>&1; then
              curl -s https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-stable-linux-amd64.zip -o ngrok.zip
              unzip ngrok.zip
              sudo mv ngrok /usr/local/bin/
              rm -f ngrok.zip
            fi

            # Configure ngrok
            ngrok config add-authtoken "$NGROK_AUTH_TOKEN"

            # Stop previous container if exists
            if sudo docker ps -a --format '{{.Names}}' | grep -q '^attendance-app$'; then
              sudo docker rm -f attendance-app
            fi

            # Kill ngrok processes
            NGROK_PIDS=$(pgrep -f 'ngrok http' || echo '')
            if [ -n "$NGROK_PIDS" ]; then
              for pid in $NGROK_PIDS; do
                kill -9 $pid || true
              done
            fi

            # Free port if in use
            PORT_PIDS=$(sudo fuser $EXTERNAL_PORT/tcp 2>/dev/null || echo '')
            if [ -n "$PORT_PIDS" ]; then
              for pid in $PORT_PIDS; do
                sudo kill -9 $pid || true
              done
            fi

            # Clean app directory
            sudo rm -rf "$APP_DIR"
            mkdir -p "$APP_DIR"

            # Clone repo
            git clone https://github.com/Praven4754/Attendance-Assistant-Phidata.git "$APP_DIR"
            cd "$APP_DIR"

            # Create .env file
            cat > "$APP_DIR/.env" <<ENV_EOF
            GOOGLE_API_KEY=$GOOGLE_API_KEY
            ENV_EOF

            # Build and run Docker container
            IMAGE_TAG="attendance-app-$(date +%Y%m%d%H%M%S)"
            sudo docker build -t "$IMAGE_TAG" "$APP_DIR"
            sudo docker run -d --name attendance-app --env-file "$APP_DIR/.env" -p "$EXTERNAL_PORT:$INTERNAL_PORT" "$IMAGE_TAG"

            # Start ngrok
            nohup ngrok http $EXTERNAL_PORT > /home/ubuntu/ngrok.log 2>&1 &
            NGROK_PID=$!

            # Wait for ngrok to initialize
            sleep 10

            # Fetch ngrok URL
            NGROK_URL=""
            for i in {1..20}; do
              NGROK_URL=$(curl -s http://127.0.0.1:4040/api/tunnels | jq -r '.tunnels[0].public_url' || echo "")
              if [ -n "$NGROK_URL" ] && [ "$NGROK_URL" != "null" ]; then
                echo "$NGROK_URL" > /opt/ngrok_url.txt
                echo "$NGROK_URL"
                break
              fi
              sleep 5
            done
          ENDSSH

      - name: Show Ngrok URL
        run: |
          NGROK_URL=$(ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST }} "cat /opt/ngrok_url.txt 2>/dev/null || echo 'URL not found'")
          echo "üöÄ Deployment Complete!"
          echo "üì± Access your app at: $NGROK_URL"
          if [[ "$NGROK_URL" != "URL not found" ]]; then
            echo "‚úÖ Deployment successful!"
          else
            echo "‚ùå Failed to retrieve ngrok URL"
            exit 1
          fi
